services:
  api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
      - LOG_LEVEL=info
      - DATABASE_URL
    depends_on:
      db:
        condition: service_healthy

  web:
    build:
      context: ./apps/web
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - api
    # Optionally configure API URL if frontend needs it
    # environment:
    #   - REACT_APP_API_URL=http://localhost:8080

  ai-service:
    build:
      context: ./apps/ai-service
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - api

  db:
    image: postgres:17.5-alpine3.22
    restart: always
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
volumes:
  db-data:
